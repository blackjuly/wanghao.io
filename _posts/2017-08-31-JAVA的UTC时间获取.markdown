---
layout:     post
title:      "JAVA的UTC时间获取"
subtitle:   " \"JAVA的UTC时间获取\""
date:       2017-07-20 21:36:00
author:     "wanghao"
header-img: "img/post-bg-2015.jpg"
tags:
    - JAVA
    - 笔记
    
---

> “在编写android的网络工具类时，需要获取时间戳，为避免多时区的问题，开始使用UTC时间。”



**UTC时间的获取的应用场景：**

本次加密中，在header部分使用了时间戳，用于sha256加密，所以为在后期的业务拓展的考虑，进行国际租车时，可能接收到多个时区的时间戳，这样可能会有问题，故统一使用UTC时间！

**UTC时间的JAVA获取方式：**

网上一般的获取方式都为：
```
/** 
     * 得到UTC时间，类型为字符串，格式为"yyyy-MM-dd HH:mm"<br /> 
     * 如果获取失败，返回null 
     * @return 
     */  
    public static String getUTCTimeStr() {  
        StringBuffer UTCTimeBuffer = new StringBuffer();  
        // 1、取得本地时间：  
        Calendar cal = Calendar.getInstance() ;  
        // 2、取得时间偏移量：  
        int zoneOffset = cal.get(java.util.Calendar.ZONE_OFFSET);  
        // 3、取得夏令时差：  
        int dstOffset = cal.get(java.util.Calendar.DST_OFFSET);  
        // 4、从本地时间里扣除这些差量，即可以取得UTC时间：  
        cal.add(java.util.Calendar.MILLISECOND, -(zoneOffset + dstOffset));  
        int year = cal.get(Calendar.YEAR);  
        int month = cal.get(Calendar.MONTH)+1;  
        int day = cal.get(Calendar.DAY_OF_MONTH);  
        int hour = cal.get(Calendar.HOUR_OF_DAY);  
        int minute = cal.get(Calendar.MINUTE);   
        UTCTimeBuffer.append(year).append("-").append(month).append("-").append(day) ;  
        UTCTimeBuffer.append(" ").append(hour).append(":").append(minute) ;  
        try{  
            format.parse(UTCTimeBuffer.toString()) ;  
            return UTCTimeBuffer.toString() ;  
        }catch(ParseException e)  
        {  
            e.printStackTrace() ;  
        }  
        return null ;  
    }  
```
但是，这是一种不对的方式：
>java.util.Calendar cal = java.util.Calendar.getInstance();
cal.getTimeInMillis();

根据文档描述：
>@return the current time as UTC milliseconds from the epoch.

即，通过**cal.getTimeInMillis();**已经是获取的utc时间